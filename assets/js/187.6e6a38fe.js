(window.webpackJsonp=window.webpackJsonp||[]).push([[187],{849:function(_,v,l){"use strict";l.r(v);var e=l(69),t=Object(e.a)({},(function(){var _=this,v=_.$createElement,l=_._self._c||v;return l("ContentSlotsDistributor",{attrs:{"slot-key":_.$parent.slotKey}},[l("h2",{attrs:{id:"_1、grunt"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#_1、grunt"}},[_._v("#")]),_._v(" 1、grunt")]),_._v(" "),l("p",[_._v("最早的打包工具。运用配置的思想来写打包脚本，一切皆配置。配置文件 "),l("code",[_._v("Gruntfile.js")]),_._v(" "),l("strong",[_._v("缺点")])]),_._v(" "),l("ul",[l("li",[_._v("配置项太多")]),_._v(" "),l("li",[_._v("而且不同的插件会有自己的扩展字段")]),_._v(" "),l("li",[_._v("学习成本高，运用的时候需要明白各种插件的配置规则和配合方式。")])]),_._v(" "),l("h2",{attrs:{id:"_2、gulp"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#_2、gulp"}},[_._v("#")]),_._v(" 2、gulp")]),_._v(" "),l("ul",[l("li",[_._v("基于"),l("code",[_._v("nodejs")]),_._v("流的打包工具。配置文件 "),l("code",[_._v("gulpfile.js")]),_._v("。")]),_._v(" "),l("li",[_._v("定位是基于任务流的自动化构建工具。")]),_._v(" "),l("li",[l("code",[_._v("Gulp")]),_._v(" 是通过"),l("code",[_._v("task")]),_._v(" 对整个开发过程进行构建\n"),l("strong",[_._v("优点")])]),_._v(" "),l("li",[_._v("流式的写法简单直观")]),_._v(" "),l("li",[l("code",[_._v("API")]),_._v(" 简单，代码量少")]),_._v(" "),l("li",[_._v("易于学习和使用")]),_._v(" "),l("li",[_._v("适合多页面应用开发\n"),l("strong",[_._v("缺点")])]),_._v(" "),l("li",[_._v("异常处理比较麻烦")]),_._v(" "),l("li",[_._v("工作流程顺序难以精确控制")]),_._v(" "),l("li",[_._v("不太适合单页后者自定义模块的开发")])]),_._v(" "),l("h2",{attrs:{id:"_3、webpack"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#_3、webpack"}},[_._v("#")]),_._v(" 3、webpack")]),_._v(" "),l("p",[l("strong",[_._v("缺点")])]),_._v(" "),l("ul",[l("li",[_._v("学习成本高，配置复杂")]),_._v(" "),l("li",[_._v("通过"),l("code",[_._v("babel")]),_._v(" 编译后的"),l("code",[_._v("js")]),_._v(" 代码打包体积大。")])]),_._v(" "),l("h2",{attrs:{id:"_4、rollup"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#_4、rollup"}},[_._v("#")]),_._v(" 4、rollup")]),_._v(" "),l("ul",[l("li",[l("p",[_._v("rollup 下一代的 "),l("code",[_._v("es6")]),_._v(" 打包工具。利用 "),l("code",[_._v("tree-shaking")]),_._v(" 生成简洁的代码")])]),_._v(" "),l("li",[l("p",[_._v("一般而言，对于应用使用 "),l("code",[_._v("webpack")]),_._v(",对于类库使用 "),l("code",[_._v("Rollup")]),_._v("。")])]),_._v(" "),l("li",[l("p",[_._v("需要代码拆分（code Splitting），或者很多静态资源需要处理，再或者构建的项目需要引入很多 "),l("code",[_._v("commonjs")]),_._v(" 模块的依赖，使用 "),l("code",[_._v("webpack")])])]),_._v(" "),l("li",[l("p",[_._v("代码库是基于 "),l("code",[_._v("es6")]),_._v(" 模块，希望代码能够被其他人直接使用，使用 "),l("code",[_._v("rollup")])])])]),_._v(" "),l("p",[l("strong",[_._v("优点")])]),_._v(" "),l("ul",[l("li",[_._v("用标准化的格式 （es6）来写代码，通过减少死代码来尽可能的缩小包体积。\n"),l("strong",[_._v("缺点")])]),_._v(" "),l("li",[_._v("对代码拆分、静态资源、Commonjs模块支持不好。")])]),_._v(" "),l("h2",{attrs:{id:"_5、parcel"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#_5、parcel"}},[_._v("#")]),_._v(" 5、parcel")]),_._v(" "),l("ul",[l("li",[_._v("Parcel 是快速、零配置的"),l("code",[_._v("web")]),_._v(" 应用程序打包器。")]),_._v(" "),l("li",[_._v("只能用来构建用于运行在浏览器中的网页。")])]),_._v(" "),l("p",[l("strong",[_._v("优点")])]),_._v(" "),l("ul",[l("li",[_._v("内置了常见场景的构建方案及其依赖，无需安装各种依赖。")]),_._v(" "),l("li",[_._v("能以 "),l("code",[_._v("HTML")]),_._v(" 为入口，自动检测和打包依赖资源。")]),_._v(" "),l("li",[_._v("默认支持模块热替换，真正的开箱即用。")])]),_._v(" "),l("p",[l("strong",[_._v("缺点")])]),_._v(" "),l("ul",[l("li",[_._v("不支持"),l("code",[_._v("SourceMap")])]),_._v(" "),l("li",[_._v("不支持剔除无效代码("),l("code",[_._v("TreeShaking")]),_._v(")")]),_._v(" "),l("li",[_._v("配置不灵和。")])]),_._v(" "),l("p",[_._v("查看配置文件 "),l("code",[_._v("npm run eject")])])])}),[],!1,null,null,null);v.default=t.exports}}]);