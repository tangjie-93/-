(window.webpackJsonp=window.webpackJsonp||[]).push([[168],{814:function(v,_,e){"use strict";e.r(_);var t=e(69),o=Object(t.a)({},(function(){var v=this,_=v.$createElement,e=v._self._c||_;return e("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[e("ul",[e("li",[v._v("组件是"),e("strong",[v._v("独立和可复用")]),v._v("的代码组织单元。组件系统时 "),e("code",[v._v("Vue")]),v._v(" 的核心特性之一，它使得开发者使用小型、独立和通常可复用的组件构建大型应用。")]),v._v(" "),e("li",[v._v("组件化开发能大幅提高应用开发效率、测试性、复用性等。")]),v._v(" "),e("li",[v._v("组件使用按分类有："),e("strong",[v._v("页面组件、业务组件和通用组件")]),v._v("。")]),v._v(" "),e("li",[e("code",[v._v("Vue")]),v._v(" 的组件是"),e("strong",[v._v("基于配置")]),v._v("的，通常编写的组件是组件配置而非组件，框架后续会生成其构造函数，他们基于 "),e("code",[v._v("VueComponent")]),v._v(" 扩展于 "),e("code",[v._v("Vue")]),v._v("。")]),v._v(" "),e("li",[e("code",[v._v("Vue")]),v._v(" 中常用组件化技术有：属性"),e("code",[v._v("prop")]),v._v("，自定义事件，插槽，主要用于组件通信、扩展。")]),v._v(" "),e("li",[v._v("合理的划分组件，有助于提升应用性能。")]),v._v(" "),e("li",[v._v("组件应该是"),e("strong",[v._v("高内聚、低耦合")]),v._v("的。")]),v._v(" "),e("li",[v._v("遵循"),e("strong",[v._v("单向数据流")]),v._v("的原则。")])])])}),[],!1,null,null,null);_.default=o.exports}}]);