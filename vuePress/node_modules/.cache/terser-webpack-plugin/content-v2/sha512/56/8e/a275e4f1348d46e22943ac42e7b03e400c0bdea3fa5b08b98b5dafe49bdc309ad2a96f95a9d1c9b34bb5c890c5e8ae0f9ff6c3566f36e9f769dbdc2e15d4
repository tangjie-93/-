{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[61],{203:function(s,t,a){\"use strict\";a.r(t);var n=a(0),r=Object(n.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":s.$parent.slotKey}},[a(\"h3\",{attrs:{id:\"_1、什么叫虚拟dom？\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_1、什么叫虚拟dom？\"}},[s._v(\"#\")]),s._v(\" 1、什么叫虚拟dom？\")]),s._v(\" \"),a(\"p\",[s._v(\"  virtral Dom就是将真实Dom的数据抽取处理，以对象的形式模拟树形结构。虚拟DOM本质上是JavaScript对象,是对真实DOM的抽象。状态变更时，记录新树和旧树的差异，最后把差异更新到真正的dom中。\")]),s._v(\" \"),a(\"div\",{staticClass:\"language-javascript line-numbers-mode\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-javascript\"}},[a(\"code\",[s._v(\"    \"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"//真实dom\")]),s._v(\"\\n    \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"<\")]),s._v(\"div\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\">\")]),s._v(\"\\n        \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"<\")]),s._v(\"span\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\">\")]),s._v(\"测试\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"<\")]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"/\")]),s._v(\"span\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\">\")]),s._v(\"\\n    \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"<\")]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"/\")]),s._v(\"div\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\">\")]),s._v(\"\\n    \"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"//虚拟dom 伪代码 Vnode和oldVnode都是对象\")]),s._v(\"\\n    \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"var\")]),s._v(\" Vnode \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"\\n        tag\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\":\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v(\"'div'\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\"\\n        children\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\":\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"[\")]),s._v(\"\\n            \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\" tag\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\":\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v(\"'span'\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\" text\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\":\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v(\"'测试'\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\"\\n        \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"]\")]),s._v(\"\\n    \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\"\\n\")])]),s._v(\" \"),a(\"div\",{staticClass:\"line-numbers-wrapper\"},[a(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"3\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"4\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"5\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"6\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"7\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"8\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"9\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"10\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"11\")]),a(\"br\")])]),a(\"p\",[a(\"strong\",[s._v(\"虚拟dom的优点\")])]),s._v(\" \"),a(\"ul\",[a(\"li\",[s._v(\"1、保证性能下限。虚拟dom通过diff找出最小差异，然后批量进行patch，这种操作比起粗暴的直接操作dom，性能要好上很多。\")]),s._v(\" \"),a(\"li\",[s._v(\"2、无须直接操作dom，可以极大的提升开发效率。\")]),s._v(\" \"),a(\"li\",[s._v(\"3、跨平台。如服务端渲染，移动端开发。\")])]),s._v(\" \"),a(\"h3\",{attrs:{id:\"_2、diff算法（差分算法）\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_2、diff算法（差分算法）\"}},[s._v(\"#\")]),s._v(\" 2、diff算法（差分算法）\")]),s._v(\" \"),a(\"p\",[s._v(\"  采用diff算法比较新旧节点时，只会在同层级进行，不会跨层级比较。\")])])}),[],!1,null,null,null);t.default=r.exports}}]);","extractedComments":[]}